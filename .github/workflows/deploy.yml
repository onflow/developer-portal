name: ðŸš€ Deploy

on:
  push:
    branches:
      - main
      - production
  pull_request: {}

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

permissions:
  actions: write
  contents: read

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "yarn"
      - name: Install modules
        run: yarn install
      - name: Formatting
        run: yarn format:check:app

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "yarn"
      - name: Install modules
        run: yarn install
      - name: Eslint
        run: yarn lint

  jest:
    name: Jest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "yarn"
      - name: Install modules
        run: yarn install
      - run: yarn jest

  typecheck:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "yarn"
      - name: Install modules
        run: yarn install
      - name: Generate js from svg
        run: yarn build:0-svg
      - name: Typescript
        run: yarn typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "yarn"
      - name: Install modules
        run: yarn install
      - name: Build
        run: yarn build

  deploy:
    name: Deploy Staging
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [lint, typecheck, build]
    # only build/deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --config fly.staging.toml --remote-only -e GIT_SHA=$(git rev-parse HEAD) -e ORIGIN="https://flow-docs-staging.fly.dev"

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [lint, typecheck, build]
    # only build/deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/production' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --config fly.production.toml --remote-only -e GIT_SHA=$(git rev-parse HEAD) -e ORIGIN="https://developers.onflow.org"
